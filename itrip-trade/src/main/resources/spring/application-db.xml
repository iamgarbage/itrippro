<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    <context:property-placeholder location="classpath:jdbc/jdbc.properties" />
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 数据库连接配置 -->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="maxPoolSize" value="${maxPoolSize}"/>
        <property name="minPoolSize" value="${minPoolSize}"/>
        <property name="autoCommitOnClose" value="${autoCommitOnClose}"/>
        <property name="checkoutTimeout" value="${checkoutTimeout}"/>
        <property name="acquireRetryAttempts" value="${acquireRetryAttempts}"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--引用数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 引用mybatis配置文件中的配置 -->
        <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>
        <!-- 扫描model包 使用别名 -->
        <property name="typeAliasesPackage" value="cn.itrip.beans.pojo"/>
    </bean>
    <!-- 配置SQLsessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- 事务管理   -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <aop:aspectj-autoproxy/>
    <aop:config proxy-target-class="true">
        <aop:pointcut expression="execution(* *cn.itrip.trade.service..*(..))" id="transService"/>
        <aop:advisor advice-ref="myAdvice" pointcut-ref="transService"/>
    </aop:config>

    <tx:advice id="myAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="itriptx*"  propagation="REQUIRED" rollback-for="Exception"  />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <!-- basePackage属性指定了扫描的基准包，MapperScannerConfigurer将递归扫描基准包（包括下面的子包）下所有接口
            如果他们在sql映射文件中定义过，则将他们动态注册为mapperFactoryBean，这样既可批量产生映射器实现类
        -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注意此属性时name，而不是sqlSessionFactory，为其赋值使用的是 value -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--扫描 dao 中的xml-->
        <property name="basePackage" value="cn.itrip.beans,cn.itrip.dao.hotelorder" />
    </bean>
</beans>